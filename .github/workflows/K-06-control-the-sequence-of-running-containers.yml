name: K-06 Control the sequence of running containers
on:
  push:
    paths:
      - '.github/workflows/K-06-control-the-sequence-of-running-containers.yml'
      - 'kubernetes/06-control-the-sequence-of-running-containers/**'
env:
  EXPECTED: "content of test file"
  TASK_PATH: "${{ github.workspace }}/kubernetes/06-control-the-sequence-of-running-containers"

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup k3d
        uses: nolar/setup-k3d-k3s@v1

      - name: Verify Docker installation
        run: docker version

      - name: Verify Kubernetes installation
        run: k3d --version

      - name: Create cluster with registry
        run: k3d cluster create demo-cluster --registry-create demo-registry:12345

      - name: Build, tag and push the image for dockerize
        uses: docker/build-push-action@v4
        with:
           context: ${{ env.TASK_PATH }}/src
           file: ${{ env.TASK_PATH }}/src/Dockerfile
           push: true
           tags: localhost:12345/06-writer-reader-with-dockerize:0.1
            
      - name: Apply all needed manifests
        run: |
           kubectl apply -f ./kubernetes/06-control-the-sequence-of-running-containers/manifests
           
      - name: Get job name
        run: |
           POD_NAMES=$(kubectl get pods -l job-name=03-writer-reader -o jsonpath='{.items[*].metadata.name}')
           echo "POD_NAMES=${POD_NAMES}" >> $GITHUB_ENV
           
      - name: Extract initContainers pod logs 
        run: |
          ./check_exit_code_and_logs.sh 'kubectl logs 01-writer-reader -c reader-container' 'content of test file'
          INIT_OUTPUT=$(kubectl logs 01-writer-reader -c reader-container)
          echo "INIT_OUTPUT=${INIT_OUTPUT}" >> $GITHUB_ENV
          echo "${INIT_OUTPUT}"
          
      - name: Extract sleep pod logs
        run: |
          ./check_exit_code_and_logs.sh 'kubectl logs 02-writer-reader -c reader-container' 'content of test file'
          SLEEP_OUTPUT=$(kubectl logs 02-writer-reader -c reader-container)
          echo "SLEEP_OUTPUT=${SLEEP_OUTPUT}" >> $GITHUB_ENV
          echo "${SLEEP_OUTPUT}"
          
      - name: Extract dockerize pod logs
        run: |
          ./check_exit_code_and_logs.sh 'kubectl logs 04-writer-reader -c reader-container' 'content of test file'
          DOCKERIZE_OUTPUT=$(kubectl logs 04-writer-reader -c reader-container > 06-dockerize-logs.txt)
          DOCKERIZE_OUTPUT=$(grep -o "content of test file" 06-dockerize-logs.txt)
          echo "DOCKERIZE_OUTPUT=${DOCKERIZE_OUTPUT}" >> $GITHUB_ENV
          echo "${DOCKERIZE_OUTPUT}"
          
      - name: Extract job logs
        run: |
          ./check_exit_code_and_logs.sh 'kubectl logs ${POD_NAMES} -c reader-container' 'content of test file'
          POD_NAMES="${POD_NAMES}"
          for pod_name in $POD_NAMES; do
          JOB_OUTPUT=$(kubectl logs $pod_name -c reader-container)
          done
          echo "JOB_OUTPUT=${JOB_OUTPUT}" >> $GITHUB_ENV
          echo "${JOB_OUTPUT}"
          
      - name: Check output
        run: |
          if [[ "${{ env.JOB_OUTPUT }}" == "${{ env.EXPECTED }}" ]] && [[ "${{ env.SLEEP_OUTPUT }}" == "${{ env.EXPECTED }}" ]] && [[ "${{ env.INIT_OUTPUT }}" == "${{ env.EXPECTED }}" ]] && [[ "${{ env.DOCKERIZE_OUTPUT }}" == "${{ env.EXPECTED }}" ]] ; then
          echo "The outputs matche the expected one"
          else
          echo "The outputs don't match"
          exit 1
          fi
